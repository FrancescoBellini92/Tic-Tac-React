{"version":3,"sources":["utils/utils.js","components/CurrentPlayer.js","components/Square.js","components/Board.js","components/HistoryMoves.js","components/ErrorBoundary.js","serviceWorker.js","index.js","components/Game.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","winner","coordinates","calculateDraw","CurrentPlayer","status","className","Square","style","value","onClick","Board","winningSquares","renderSquare","includes","color","HistoryMovies","history","map","item","index","desc","key","type","ErrorBoundary","props","state","hasError","error","errorInfo","console","log","this","children","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","useState","Array","fill","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","current","win","draw","slice","concat","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7819ac04.chunk.js","sourcesContent":["export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return {winner: squares[a], coordinates: [a,b,c,]};\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function calculateDraw(squares) {\r\n    for (let i = 0; i < 9; i++) {\r\n        if (!squares[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function CurrentPlayer({status}) {\r\n    return ( \r\n        <div className=\"row justify-content-center \">\r\n            <div className=\"col-md-4 alert alert-primary text-center text-dark\">\r\n                <strong>{status}</strong></div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Square({style, value, onClick}) {\r\n    return (\r\n    <button className=\"square\" style={style} onClick={() => onClick()}>\r\n        {value}\r\n    </button>\r\n    );\r\n  }\r\n  \r\n ","import React from 'react';\r\nimport Square from './Square';\r\n\r\nexport default function Board ({squares, winningSquares, onClick}) {\r\n    const renderSquare = i => {\r\n        let style;\r\n        winningSquares.includes(i) ? style = {color:'green'} : style = null;\r\n        return <Square value={squares[i]} style={style} onClick={() => onClick(i)} />;\r\n    }\r\n    return (\r\n    \r\n            <div className=\"col-md-6\">\r\n                <div className=\"row justify-content-center\">\r\n                    {renderSquare(0)}\r\n                    {renderSquare(1)}\r\n                    {renderSquare(2)}\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    {renderSquare(3)}\r\n                    {renderSquare(4)}\r\n                    {renderSquare(5)}\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    {renderSquare(6)}\r\n                    {renderSquare(7)}\r\n                    {renderSquare(8)}\r\n                </div>\r\n            </div>\r\n      \r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function HistoryMovies({history, onClick}) {\r\n    return (\r\n        <div className=\"col-md-6\">\r\n            <div className=\"list-group my-2\">\r\n                <div className=\"list-group-item list-group-item-action list-group-item-primary text-center text-dark\">\r\n                    <strong>History of moves</strong>\r\n                </div>\r\n                {history.map((item, index) => {\r\n                const desc = index ? `Go to move # ${index}` : 'Go to game start';\r\n                return (\r\n                <button key={index} className=\"list-group-item list-group-item-action text-center\" type=\"button\"  onClick={() => onClick(index)}>\r\n                    {desc}\r\n                </button>);\r\n            })}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {hasError: false};\r\n    }\r\n\r\n    static getDerivedStateFromError (error) {\r\n        return {hasError: true};\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <div className=\"alert alert-danger\"><h3>Oops! An exception emerged... check the console for more info</h3></div>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './components/Game';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\n\r\n// ========================================\r\n  \r\n  ReactDOM.render(\r\n    <ErrorBoundary>\r\n        <Game />\r\n    </ErrorBoundary>,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  serviceWorker.register();","import React, {useState} from 'react';\r\nimport {calculateWinner, calculateDraw} from '../utils/utils';\r\nimport CurrentPlayer from './CurrentPlayer';\r\nimport Board from './Board';\r\nimport HistoryMoves from './HistoryMoves';\r\n\r\n\r\nexport default function Game (props) {\r\n    const [history, setHistory] = useState([{squares:  Array(9).fill(null)}]);\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n\r\n    const jumpTo = i => {\r\n        setStepNumber(i); \r\n        setXIsNext((i % 2) === 0);\r\n        setHistory(history.slice(0, i + 1));\r\n    }\r\n\r\n    const handleClick = i => {\r\n        const current = history.slice(0, stepNumber + 1)[history.length-1];\r\n        const squares = [...current.squares];\r\n        if (calculateWinner(squares) || calculateDraw(stepNumber)) {\r\n            return;\r\n        }\r\n       xIsNext ? squares[i] = 'X' : squares[i] = 'O';\r\n            setHistory(history.concat([{squares}]));\r\n            setStepNumber(history.length);\r\n            setXIsNext(!xIsNext);\r\n    }\r\n \r\n    const current = history[stepNumber];\r\n    const win = calculateWinner(current.squares);\r\n    const draw = calculateDraw(current.squares);\r\n    let status;\r\n    if (win) {\r\n        status = `Winner: ${win.winner}`;\r\n    } else {\r\n        if (draw) {\r\n            status = 'Draw';\r\n        } else {\r\n            status = `Next player: ${xIsNext ? 'X': 'O'}`;\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <CurrentPlayer status={status} />\r\n                <div className=\"row\">\r\n                <Board squares={current.squares} winningSquares={win ? win.coordinates : []} onClick={handleClick} />\r\n                <HistoryMoves history={history} onClick={jumpTo} />\r\n            </div>\r\n        </div>\r\n    );\r\n  }"],"sourceRoot":""}