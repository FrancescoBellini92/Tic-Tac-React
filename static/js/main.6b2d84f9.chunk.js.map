{"version":3,"sources":["utils/utils.js","components/CurrentPlayer.js","components/Square.js","components/Board.js","components/HistoryMoves.js","components/ErrorBoundary.js","index.js","components/Game.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","winner","coordinates","calculateDraw","CurrentPlayer","status","className","Square","style","value","onClick","Board","winningSquares","renderSquare","includes","color","HistoryMovies","history","map","item","index","desc","key","type","ErrorBoundary","props","state","hasError","error","errorInfo","console","log","this","children","React","Component","ReactDOM","render","useState","Array","fill","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","current","win","draw","slice","concat","document","getElementById"],"mappings":"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","file":"static/js/main.6b2d84f9.chunk.js","sourcesContent":["export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return {winner: squares[a], coordinates: [a,b,c,]};\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function calculateDraw(squares) {\r\n    for (let i = 0; i < 9; i++) {\r\n        if (!squares[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function CurrentPlayer({status}) {\r\n    return ( \r\n        <div className=\"row justify-content-center \">\r\n            <div className=\"col-md-4 alert alert-primary text-center text-dark\">\r\n                <strong>{status}</strong></div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Square({style, value, onClick}) {\r\n    return (\r\n    <button className=\"square\" style={style} onClick={() => onClick()}>\r\n        {value}\r\n    </button>\r\n    );\r\n  }\r\n  \r\n ","import React from 'react';\r\nimport Square from './Square';\r\n\r\nexport default function Board ({squares, winningSquares, onClick}) {\r\n    const renderSquare = i => {\r\n        let style;\r\n        winningSquares.includes(i) ? style = {color:'green'} : style = null;\r\n        return <Square value={squares[i]} style={style} onClick={() => onClick(i)} />;\r\n    }\r\n    return (\r\n    \r\n            <div className=\"col-md-6\">\r\n                <div className=\"row justify-content-center\">\r\n                    {renderSquare(0)}\r\n                    {renderSquare(1)}\r\n                    {renderSquare(2)}\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    {renderSquare(3)}\r\n                    {renderSquare(4)}\r\n                    {renderSquare(5)}\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    {renderSquare(6)}\r\n                    {renderSquare(7)}\r\n                    {renderSquare(8)}\r\n                </div>\r\n            </div>\r\n      \r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function HistoryMovies({history, onClick}) {\r\n    return (\r\n        <div className=\"col-md-6 text-center\">\r\n            <div className=\"list-group my-2\">\r\n                <div className=\"list-group-item list-group-item-action list-group-item-primary text-center text-dark\">\r\n                    <strong>History of moves</strong>\r\n                </div>\r\n                {history.map((item, index) => {\r\n                const desc = index ? `Go to move # ${index}` : 'Go to game start';\r\n                return (\r\n                <button key={index} className=\"list-group-item list-group-item-action text-center\" type=\"button\"  onClick={() => onClick(index)}>\r\n                    {desc}\r\n                </button>);\r\n            })}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {hasError: false};\r\n    }\r\n\r\n    static getDerivedStateFromError (error) {\r\n        return {hasError: true};\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <div className=\"alert alert-danger\"><h3>Oops! An exception emerged... check the console for more info</h3></div>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './components/Game';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport './index.css';\r\n\r\n\r\n// ========================================\r\n  \r\n  ReactDOM.render(\r\n    <ErrorBoundary>\r\n        <Game />\r\n    </ErrorBoundary>,\r\n    document.getElementById('root')\r\n  );\r\n  ","import React, {useState} from 'react';\r\nimport {calculateWinner, calculateDraw} from '../utils/utils';\r\nimport CurrentPlayer from './CurrentPlayer';\r\nimport Board from './Board';\r\nimport HistoryMoves from './HistoryMoves';\r\n\r\n\r\nexport default function Game (props) {\r\n    const [history, setHistory] = useState([{squares:  Array(9).fill(null)}]);\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n\r\n    const jumpTo = i => {\r\n        setStepNumber(i); \r\n        setXIsNext((i % 2) === 0);\r\n        setHistory(history.slice(0, i + 1));\r\n    }\r\n\r\n    const handleClick = i => {\r\n        const current = history.slice(0, stepNumber + 1)[history.length-1];\r\n        const squares = [...current.squares];\r\n        if (calculateWinner(squares) || calculateDraw(stepNumber)) {\r\n            return;\r\n        }\r\n       xIsNext ? squares[i] = 'X' : squares[i] = 'O';\r\n            setHistory(history.concat([{squares}]));\r\n            setStepNumber(history.length);\r\n            setXIsNext(!xIsNext);\r\n    }\r\n \r\n    const current = history[stepNumber];\r\n    const win = calculateWinner(current.squares);\r\n    const draw = calculateDraw(current.squares);\r\n    let status;\r\n    if (win) {\r\n        status = `Winner: ${win.winner}`;\r\n    } else {\r\n        if (draw) {\r\n            status = 'Draw';\r\n        } else {\r\n            status = `Next player: ${xIsNext ? 'X': 'O'}`;\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <CurrentPlayer status={status} />\r\n                <div className=\"row\">\r\n                <Board squares={current.squares} winningSquares={win ? win.coordinates : []} onClick={handleClick} />\r\n                <HistoryMoves history={history} onClick={jumpTo} />\r\n            </div>\r\n        </div>\r\n    );\r\n  }"],"sourceRoot":""}